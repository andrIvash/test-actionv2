name: Move Assigned Issue to In Progress

on:
  issues:
    types: [assigned]

jobs:
  move:
    name: Move
    runs-on: ubuntu-latest
    steps:
      - name: Move issue to In Progress
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PROJECTS_MOVE }}
          script: |
            const issueNumber = context.issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // GraphQL query to get the project and issue information
            const query = `
              query($owner: String!, $repo: String!, $issueNumber: Int!) {
                repository(owner: $owner, name: $repo) {
                  issue(number: $issueNumber) {
                    id
                    projectItems(first: 10) {
                      nodes {
                        id
                        project {
                          id
                          title
                          fields(first: 10) {
                            nodes {
                              id
                              name
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;

            // Fetch the issue details and associated project items
            const result = await github.graphql(query, {
              owner: owner,
              repo: repo,
              issueNumber: issueNumber
            });

            const issueId = result.repository.issue.id;
            const projectItems = result.repository.issue.projectItems.nodes;

            // Find the project item for the specific project
            const projectItem = projectItems.find(item => item.project.title === "test1-project");

            if (projectItem) {
              const projectItemId = projectItem.id;
              const projectId = projectItem.project.id;

              // Find the "Status" field ID
              const statusField = projectItem.project.fields.nodes.find(field => field.name === "Status");
              if (!statusField) {
                throw new Error(`"Status" field not found in project`);
              }
              const statusFieldId = statusField.id;

              // GraphQL query to fetch the "In Progress" status option ID
              const statusOptionsQuery = `
                query($fieldId: ID!) {
                  node(id: $fieldId) {
                    ... on ProjectV2Field {
                      options {
                        id
                        name
                      }
                    }
                  }
                }
              `;
              const statusOptionsResult = await github.graphql(statusOptionsQuery, {
                fieldId: statusFieldId
              });
              const inProgressOption = statusOptionsResult.node.options.find(option => option.name === "In Progress");
              if (!inProgressOption) {
                throw new Error(`"In Progress" status not found in project`);
              }
              const inProgressOptionId = inProgressOption.id;

              // GraphQL mutation to move the project item to In Progress
              const mutation = `
                mutation($projectId: ID!, $projectItemId: ID!, $fieldId: ID!, $status: ID!) {
                  updateProjectV2ItemFieldValue(input: {
                    projectId: $projectId,
                    itemId: $projectItemId,
                    fieldId: $fieldId,
                    value: {
                      singleSelectOptionId: $status
                    }
                  }) {
                    projectV2Item {
                      id
                    }
                  }
                }
              `;

              await github.graphql(mutation, {
                projectId: projectId,
                projectItemId: projectItemId,
                fieldId: statusFieldId,
                status: inProgressOptionId
              });

              console.log(`Moved issue #${issueNumber} to "In Progress"`);
            } else {
              console.log(`Issue #${issueNumber} is not part of the specified project`);
            }

